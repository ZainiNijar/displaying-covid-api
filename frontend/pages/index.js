import axios from "axios";
import Head from "next/head";
import DataTable from "react-data-table-component";
import { useEffect, useState } from "react";

export default function Home() {
  const [dataCovid, setDataCovid] = useState("");
  const [latest, setLatest] = useState("");

  useEffect(() => {
    axios.get("/api/covid").then((response) => {
      setDataCovid(response.data.list_data);
      setLatest(response.data);
      // console.log(response.data.list_data);
    });
  }, []);

  const numberFormat = (number) => {
    return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
  };

  const columns = [
    {
      name: <th className="capitalize font-light">prov</th>,
      selector: (row) => {
        return (
          <div className="text-base capitalize leading-none text-gray-700 mr-2">
            {row.key}
          </div>
        );
      },
      sortable: true,
    },

    {
      name: <th className="capitalize font-light">jumlah dirawat</th>,
      selector: (row) => {
        return (
          <>
            <div className="flex items-center">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                width="12"
                height="12"
              >
                <path fill="none" d="M0 0h24v24H0z" />
                <path
                  d="M8 20v-6h8v6h3V4H5v16h3zm2 0h4v-4h-4v4zm11 0h2v2H1v-2h2V3a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v17zM11 8V6h2v2h2v2h-2v2h-2v-2H9V8h2z"
                  fill="rgba(63,55,55,1)"
                />
              </svg>
              <span className="ml-2">{numberFormat(row.jumlah_dirawat)}</span>
            </div>
          </>
        );
      },
      sortable: true,
    },

    {
      name: <th className="capitalize font-light">jumlah kasus</th>,
      selector: (row) => {
        return (
          <>
            <div className="bg-red-400 text-xs px-2 py-1 text-white w-full rounded-full">
              {numberFormat(row.jumlah_kasus)}
            </div>
          </>
        );
      },
      sortable: true,
    },

    {
      name: <th className="capitalize font-light">jumlah meninggal</th>,
      selector: (row) => {
        return (
          <>
            <div className="bg-gray-400 text-xs px-2 py-1 text-white w-full rounded-full">
              {numberFormat(row.jumlah_meninggal)}
            </div>
          </>
        );
      },
      sortable: true,
    },

    {
      name: <th className="capitalize font-light">jumlah sembuh</th>,
      selector: (row) => {
        return (
          <>
            <div className="bg-green-400 text-xs px-2 py-1 text-white w-full rounded-full">
              {numberFormat(row.jumlah_sembuh)}
            </div>
          </>
        );
      },
      sortable: true,
    },

    {
      name: <th className="capitalize font-light">L/P</th>,
      selector: (row) => {
        return (
          <div className="flex items-center">
            <div className="mr-2 flex items-center justify-center">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                width="12"
                height="12"
              >
                <path fill="none" d="M0 0h24v24H0z" />
                <path
                  d="M15.05 8.537L18.585 5H14V3h8v8h-2V6.414l-3.537 3.537a7.5 7.5 0 1 1-1.414-1.414zM10.5 20a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11z"
                  fill="rgba(71,63,63,1)"
                />
              </svg>
              <div className="text-sm leading-none text-gray-600 ml-2">
                {numberFormat(row.jenis_kelamin[0].doc_count)}
              </div>
            </div>
            <div className="flex items-center justify-center">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                width="12"
                height="12"
              >
                <path fill="none" d="M0 0h24v24H0z" />
                <path
                  d="M11 15.934A7.501 7.501 0 0 1 12 1a7.5 7.5 0 0 1 1 14.934V18h5v2h-5v4h-2v-4H6v-2h5v-2.066zM12 14a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11z"
                  fill="#EC80DF"
                />
              </svg>
              <div className="text-sm leading-none text-gray-600 ml-2">
                {numberFormat(row.jenis_kelamin[1].doc_count)}
              </div>
            </div>
          </div>
        );
      },
      sortable: true,
    },
  ];

  return (
    <div className="container mx-auto">
      <Head>
        <title>Covid-19</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="">
        <div className="sm:px-6 w-full">
          <div className="px-4 md:px-10 py-4 md:py-7 ">
            <div className="flex items-center justify-between">
              <div className="focus:outline-none text-base sm:text-lg md:text-xl lg:text-2xl font-bold leading-normal text-gray-800">
                Covid-19 Indonesia
              </div>
              <div className="py-3 px-4 flex items-center text-sm font-medium leading-none text-gray-600 bg-gray-200 hover:bg-gray-300 cursor-pointer rounded">
                <div>Sort By:</div>
                <select
                  aria-label="select"
                  className="focus:text-indigo-600 focus:outline-none bg-transparent ml-1"
                >
                  <option className="text-sm text-indigo-800">Latest</option>
                  <option className="text-sm text-indigo-800">Oldest</option>
                  <option className="text-sm text-indigo-800">Latest</option>
                </select>
              </div>
            </div>
          </div>
          <div className="bg-white py-4 md:py-7 px-4 md:px-8 xl:px-10">
            <div className="flex justify-between px-8 bg-indigo-500 text-white p-4 rounded">
              <div>
                <b>Last date : </b>
                {latest && JSON.stringify(latest.last_date, null, 2)}
              </div>
              <div>
                <b>Current data : </b>
                {latest && JSON.stringify(latest.current_data, null, 2)}
              </div>
              <div>
                <b>Missing data : </b>
                {latest && JSON.stringify(latest.missing_data, null, 2)}
              </div>
              <div>
                <b>Tanpa prov : </b>
                {latest && JSON.stringify(latest.tanpa_provinsi, null, 2)}
              </div>
            </div>
            <div className="mt-7 overflow-x-auto border">
              <DataTable
                columns={columns}
                data={dataCovid && dataCovid}
                pagination
              />
            </div>
          </div>
        </div>
      </main>
    </div>
  );
}
